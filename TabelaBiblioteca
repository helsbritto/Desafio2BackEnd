# Criação de Tabelas 1 #

CREATE TABLE Autores (
    AutorID INT PRIMARY KEY,
    Nome VARCHAR(255),
    Nacionalidade VARCHAR(255)
);

CREATE TABLE Generos (
    GeneroID INT PRIMARY KEY,
    Nome VARCHAR(255)
);

CREATE TABLE Livros (
    LivroID INT PRIMARY KEY,
    Titulo VARCHAR(255),
    Editora VARCHAR(255),
    FOREIGN KEY (GeneroID) REFERENCES Generos(GeneroID)
);

CREATE TABLE LivrosAutores (
    LivroID INT,
    AutorID INT,
    PRIMARY KEY (LivroID, AutorID),
    FOREIGN KEY (LivroID) REFERENCES Livros(LivroID),
    FOREIGN KEY (AutorID) REFERENCES Autores(AutorID)
);

CREATE TABLE Exemplares (
    ExemplarID INT PRIMARY KEY,
    LivroID INT,
    Disponivel BOOLEAN,
    Emprestimos INT,
    MaxRenovacoes INT,
    FOREIGN KEY (LivroID) REFERENCES Livros(LivroID)
);

CREATE TABLE Usuarios (
    UsuarioID INT PRIMARY KEY,
    Nome VARCHAR(255),
    Telefone VARCHAR(20),
    Nacionalidade VARCHAR(255)
);

CREATE TABLE Emprestimos (
    EmprestimoID INT PRIMARY KEY,
    UsuarioID INT,
    ExemplarID INT,
    DataEmprestimo DATETIME,
    DataDevolucao DATETIME,
    Estado VARCHAR(20),
    FOREIGN KEY (UsuarioID) REFERENCES Usuarios(UsuarioID),
    FOREIGN KEY (ExemplarID) REFERENCES Exemplares(ExemplarID)
);

# Inserção de Dados 2 #

INSERT INTO Autores (AutorID, Nome, Nacionalidade) VALUES
    (1, 'Stephen King', 'Americano'),
    (2, 'Sacia Xavier', 'Brasileira');

INSERT INTO Generos (GeneroID, Nome) VALUES
    (1, 'Terror'),
    (2, 'Romance');

INSERT INTO Livros (LivroID, Titulo, Editora, GeneroID) VALUES
    (1, 'O Cemitério', 'Editora Suma', 1),
    (2, 'Paraíso do Sul', 'Saciaverso', 2);

INSERT INTO LivrosAutores (LivroID, AutorID) VALUES
    (1, 1),
    (2, 2);

INSERT INTO Exemplares (ExemplarID, LivroID, Disponivel, Emprestimos, MaxRenovacoes) VALUES
    (1, 1, TRUE, 0, 2),
    (2, 2, TRUE, 0, 2);

INSERT INTO Usuarios (UsuarioID, Nome, Telefone, Nacionalidade) VALUES
    (1, 'Nicolas', '123456789', 'Brasileiro');

INSERT INTO Emprestimos (EmprestimoID, UsuarioID, ExemplarID, DataEmprestimo, DataDevolucao, Estado) VALUES
    (1, 1, 1, '2024-02-15', '2024-03-01', 'Devolvido');

# Consultas SQL 3 #

# Listar todos os livros disponíveis #
SELECT Livros.Titulo, Livros.Editora, Generos.Nome AS Genero
FROM Livros
JOIN Generos ON Livros.GeneroID = Generos.GeneroID
JOIN Exemplares ON Livros.LivroID = Exemplares.LivroID
WHERE Exemplares.Disponivel = TRUE;

# Encontrar todos os livros emprestados no momento #
SELECT Livros.Titulo, Livros.Editora, Generos.Nome AS Genero
FROM Livros
JOIN Generos ON Livros.GeneroID = Generos.GeneroID
JOIN Exemplares ON Livros.LivroID = Exemplares.LivroID
WHERE Exemplares.Disponivel = FALSE;

# Localizar os livros escritos por um autor específico #
SELECT Livros.Titulo, Livros.Editora, Generos.Nome AS Genero
FROM Livros
JOIN Generos ON Livros.GeneroID = Generos.GeneroID
JOIN LivrosAutores ON Livros.LivroID = LivrosAutores.LivroID
JOIN Autores ON LivrosAutores.AutorID = Autores.AutorID
WHERE Autores.Nome = 'Stephen King';

# Verificar o número de cópias disponíveis de um determinado livro #
SELECT Livros.Titulo, COUNT(Exemplares.ExemplarID) AS CopiasDisponiveis
FROM Livros
JOIN Exemplares ON Livros.LivroID = Exemplares.LivroID
WHERE Exemplares.Disponivel = TRUE
GROUP BY Livros.Titulo;

# Mostrar os empréstimos em atraso #
SELECT Usuarios.Nome AS Usuario, Livros.Titulo, Emprestimos.DataDevolucao
FROM Emprestimos
JOIN Usuarios ON Emprestimos.UsuarioID = Usuarios.UsuarioID
JOIN Exemplares ON Emprestimos.ExemplarID = Exemplares.ExemplarID
JOIN Livros ON Exemplares.LivroID = Livros.LivroID
WHERE Emprestimos.Estado = 'emprestado' AND Emprestimos.DataDevolucao < NOW();

# Atualizações e Exclusões 4 #

# Atualizar para marcar um livro como devolvido #
UPDATE Emprestimos
SET Estado = 'Devolvido'
WHERE ExemplarID = 1;

# Excluir um autor e seus livros associados #
DELETE FROM Autores
WHERE AutorID = 1;




